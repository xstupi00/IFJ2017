										| 	Empty			|										First											|								Follow																	
____________________|_____________|_____________________________________________|__________________________________________________________
<prog>							| 	  {}			|	Declare, Function, Scope, EOL								|	- 																											
<declare-function>	| 		{}			| Declare																			| EOL  																									
<define-function>		| 		{}  		| Function																		| EOL																								
<main-function>			| 		{}			| Scope																				| -																											
<function-element>	| 	epsilon		| Dim,EOL,id,Print,Input,Return,Do,If					| End 																									
<element-list>			| 		{}			| EOL,id,Print,Input,Return,Do,If							| End																									
<statement>					| 		{}			| EOL,id,Print,Input,Return,Do,If							| Dim,EOL,id,Print,Input,Return,Do,If,End,Loop,Else 
<value>							| 	epsilon		| assign																			| EOL																										
<else-branch>				| 	epsilon		| Else																	      | End																										
<stat-list>					| 	epsilon		| EOL,id,Print,Input,Return,Do,If							| Loop,Else,End
<exp-to-print>			| 	epsilon		| E																					  | EOL																										
<call-assign>				| 		{}			| E,id																				| EOL																										
<param-value>				| 	epsilon		| E																						| right_rounded_bracket 																
<next-param-value>	| 	epsilon		| comma																				| right_rounded_bracket																	
<param-list>				| 	epsilon		| id																					| right_rounded_bracket																	
<next-param>				| 	epsilon		| comma																				| right_rounded_bracket 																
<param>							| 		{}			| id																					| comma,right_rounded_bracket 													
<data-type>					| 		{}			| Integer,String,Double												| EOL,assign,comma,right_rounded_bracet 
<E>									| 		{}			| E																						| semicolon,EOL,Then,comma,right_rounded_bracket 
____________________|_____________|_____________________________________________|__________________________________________________________


______________________________________________________________________________________________________ ____________________________________
																		Rule																															|  				Predict	
______________________________________________________________________________________________________|____________________________________
01. <prog> -> <declare-function> EOL <prog>																														| Declare 
02. <prog> -> <define-function> EOL <prog>																														| Function
03. <prog> -> <main-function>																																					| Scope
04. <prog> -> EOL <prog>																																							| EOL
05. <declare-function> -> Declare Function id (<param-list>) As <data-type>														|	Declare
06. <define-function> -> Function id (<param-list>) As <data-type> EOL <function-element> End Function| Function
07. <main-function> -> Scope EOL <function-element> End Scope																					| Scope
08. <function-element> -> epsilon																																			|	End
09. <function-element> -> Dim id As <data-type> <value> EOL <function-element>												| Dim
10. <function-element> -> <element-list>																															| EOL,id,Print,Input,Return,Do,If
11. <element-list> -> <statement> <function-element>																									| EOL,id,Print,Input,Return,Do,If
12. <statement> -> EOL																																								| EOL
13. <statement> -> id = <call-assign> EOL																															| id
14. <statement> -> Print <E> ; <exp-to-print> EOL																											| Print
15. <statement> -> Input id EOL																																				| Input
16. <statement> -> Return <E> EOL																																			| Return
17. <statement> -> Do While <E> EOL <stat-list> Loop EOL																							| Do
18. <statement> -> If <E> Then EOL <stat-list> <else-branch> End If EOL																| If
19. <value> -> epsilon																																								| EOL
20. <value> -> = <E>  																																								| assign
21. <else-branch> -> epsilon																																					| End 
22. <else-branch> -> Else EOL <stat-list>																															| Else
23. <stat-list> -> <statement> <stat-list>																														| EOL,id,Print,Input,Return,Do,If 
24. <stat-list> -> epsilon																																						| Loop,Else,End
25. <exp-to-print> -> <E> ; <exp-to-print>																														|	First<E>
26. <exp-to-print> -> epsilon																																					| EOL
27. <call-assign> -> <E>																																							| First<E>
28. <call-assign> -> id(<param-value>)																																| id	
29. <param-value> -> epsilon																																					| right_rounded_bracket
30. <param-value> -> <E> <next-param-value>																														| First<E>
31. <next-param-value> -> , <E> <next-param-value>																										| comma
32. <next-param-value> -> epsilon																																			| right_rounded_bracket
33. <param-list> -> <param> <next-param>																															| id
34. <next-param> -> , <param> <next-param>																														| comma
35. <param-list> -> epsilon																																						| right_rounded_bracket
36. <next-param> -> epsilon																																						| right_rounded_bracket
37. <param> -> id As <data-type>																																			| id
38. <data-type> -> Integer																																						| Integer
39. <data-type> -> String																																							|	String
40. <data-type> -> Double